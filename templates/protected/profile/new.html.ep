%# -*- mode: web; eval: (follow-mode) -*-

<h3 class="fw-bold p-4">
  <i class="fas fa-user-plus fa-lg me-3 text-muted"></i>
  New User <small><em class="text-muted font-monospace"></em></small>
</h3>

%= form_for '/profile/new' => {class => "form-horizontal"} => (method => 'POST', enctype => 'multipart/form-data') => begin

  <div class="input-group mb-3">    
    %= label_for user_first_name => 'First / Last Names', class => 'input-group-text'
    %= text_field 'user_first_name', class => 'form-control', id => 'user_first_name', maxlength => "50", placeholder => 'First name, 1 to 50, UTF-8 characters', title => 'First name, 1 to 50, UTF-8 characters'
    %= text_field 'user_last_name', class => 'form-control', id => 'user_last_name', maxlength => "50", placeholder => 'Last name, 1 to 50, UTF-8 characters', title => 'Last name, 1 to 50, UTF-8 characters'
  </div>

  % my $img_title = 'User avatar image. Must be resolution max 300x300px and max 50kB size';
  <div class="input-group mb-3" title="">
    %= label_for title => 'Photo', class => 'input-group-text'
    %= file_field 'jpegPhoto', id => 'jpegPhoto', class => 'form-control form-control', accept => '.jpg'
  </div>
  
  <div class="input-group mb-3">
    %= label_for title => 'Title:', class => 'input-group-text'
    %= text_field 'title', class => 'form-control', id => 'title', maxlength => "50", placeholder => 'Employee title', title => 'Employee title'
  </div>
  
  <div class="input-group mb-3">
    <span class="input-group-text">Employment Date:</span>
    %= text_field 'umiUserDateOfEmployment', class => 'form-control', id => 'employment', title => 'Employment date', placeholder => 'yyyyMMddHHMMss'
    <span class="input-group-text"><i class="fa-regular fa-calendar"></i></span>
  </div>

  <div class="input-group mb-3">
    <span class="input-group-text">Employee Location:</span>
    %= text_field 'city', class => 'form-control', id => 'city', maxlength => "30", placeholder => 'City', title => 'Employee city'

    <select name="umiUserCountryOfResidence" class="form-select" id="umiUserCountryOfResidence" title="Countries (ISO 3166)">
      <option value="" disabled selected>--- CHOOSE COUNTRY ---</option>
      % foreach (sort(keys(%{constant('COUNTRIES')}))) {
	<option value="<%= constant('COUNTRIES')->{$_}->{two} %>"><%= $_ %></option>
      % }
    </select>

    %#= text_field 'umiUserCountryOfResidence', class => 'form-control', id => 'umiUserCountryOfResidence', maxlength => "20", placeholder => 'Country', title => 'Employee country'
  </div>

  <div class="input-group mb-3">
    <span class="input-group-text">Birth:</span>
    %= text_field 'umiUserDateOfBirth', class => 'form-control', id => 'birth', title => 'Employee birth date', placeholder => 'yyyyMMddHHMMss'
    <span class="input-group-text"><i class="fa-regular fa-calendar"></i></span>
  </div>

  <div class="input-group mb-3">
    <label class="input-group-text" for="gender">Gender</label>
    <select name="umiUserGender" class="form-select" id="gender" title="Representation of human sex (see ISO 5218)">
      % foreach (sort(keys(%{constant('GENDER')}))) {
	<option value="<%= $_ %>"><%= constant('GENDER')->{$_} %></option>
      % }
    </select>
  </div>

  %= submit_button 'Submit', class => 'btn btn-success font-weight-bold text-uppercase text-end'

% end

% if ( stash->{'mojo.validation'}->{error} ) {
  <script>
   % while (my ($k, $v) = each %{stash->{'mojo.validation'}->{error}}) {
     $('#<%= $k %>').addClass('is-invalid').after('<div id="<%= $k %>ValidationFeedback" class="invalid-feedback"></div>');
     % if (scalar(@$v) == 1) {
     $('#<%= $k %>ValidationFeedback').text('<%= $v->[0] %>');
     % } else {
     $('#<%= $k %>ValidationFeedback').text('is not <%= $v->[0] %>: <%= $v->[2] %>');
     % }
   % }
  </script>
% }

<pre class="mt-5 umi-text-tiny text-muted"><%= dumper stash->{'mojo.validation'}->{error} if %{stash->{'mojo.validation'}->{error}} %></pre>

%# <script>
%#  document.addEventListener('DOMContentLoaded', function () {
%#    const picker = new tempusDominus.TempusDominus(document.getElementById('birth'), {
%#      display: {
%#        viewMode: 'calendar',
%#        toolbarPlacement: 'top',
%#        components: {
%#          calendar: true,
%#          date: true,
%#          month: true,
%#          year: true,
%#          decades: true,
%#          clock: false,
%#          hours: false,
%#          minutes: false,
%#          seconds: false
%#        },
%#        buttons: {
%# 	 clear: true,
%# 	 close: true,
%# 	 today: true
%#        }
%#      },
%#      localization: {
%#        format: 'yyyyMMdd000000'
%#      }
%#    });
%#  });
%# 
%#  document.addEventListener('DOMContentLoaded', function () {
%#    const picker = new tempusDominus.TempusDominus(document.getElementById('employment'), {
%#      display: {
%#        viewMode: 'calendar',
%#        toolbarPlacement: 'top',
%#        components: {
%#          calendar: true,
%#          date: true,
%#          month: true,
%#          year: true,
%#          decades: true,
%#          clock: false,
%#          hours: false,
%#          minutes: false,
%#          seconds: false
%#        },
%#        buttons: {
%# 	 clear: true,
%# 	 close: true,
%# 	 today: true
%#        }
%#      },
%#      localization: {
%#        format: 'yyyyMMdd000000'
%#      }
%#    });
%#  });
%# </script>
<script>
 document.addEventListener('DOMContentLoaded', function() {
   const config = {
     display: {
       viewMode: 'calendar',
       toolbarPlacement: 'top',
       components: {
         calendar: true,
         date: true,
         month: true,
         year: true,
         decades: true,
         clock: false,
         hours: false,
         minutes: false,
         seconds: false
       },
       buttons: {
         clear: true,
         close: true,
         today: true
       }
     },
     localization: {
       format: 'yyyyMMdd000000'
     }
   };

   ['birth', 'employment'].forEach(id => {
     new tempusDominus.TempusDominus(document.getElementById(id), config);
   });
 });
</script>
