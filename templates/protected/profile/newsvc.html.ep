%# -*- mode: web; eval: (follow-mode) -*-

<h2 class="my-4">
  <i class="fa-solid <%= app->{cfg}->{ui}->{menu}->{new_svc}->{ico} . ' ' .  app->{cfg}->{ui}->{menu}->{new_svc}->{col} %> me-3"></i>
  New Service <small><em class="text-muted font-monospace fs-6">
    for dn: <%= $dn_to_new_svc %>
  </em></small>
</h2>
<hr class="p-1">

%= form_for '/profile/newsvc' => {class => "form-horizontal"} => (method => 'POST', enctype => 'multipart/form-data', id => 'dynamicForm') => begin
  %= hidden_field dn_to_new_svc => $dn_to_new_svc

  % my $options = [['--- choose service ---' => '']];
  % foreach (sort(keys(%{app->{cfg}->{ldap}->{authorizedService}}))) {
    % next if ! exists app->{cfg}->{ldap}->{authorizedService}->{$_}->{data_fields} ||
    %         ( exists app->{cfg}->{ldap}->{authorizedService}->{$_}->{disabled} &&
    %           app->{cfg}->{ldap}->{authorizedService}->{$_}->{disabled} == 1 );
    % push @{$options}, [app->{cfg}->{ldap}->{authorizedService}->{$_}->{descr} => $_] if !app->{cfg}->{ldap}->{authorizedService}->{$_}->{disabled};
  % }
  <div id="authorizedServiceDiv" class="row my-3">
    %= label_for authorizedService => 'Service', class => 'col-sm-3 fw-bold text-end text-uppercase'
    <div class="col-sm-9">
      %= select_field authorizedService => $options, id => 'authorizedService', class => 'custom-select form-control', onchange => 'toggleInputField()'
    </div>
  </div>

  % my $fields = app->{cfg}->{ui}->{form_fields};
  % my $f;
  % foreach my $s (keys(%{app->{cfg}->{ldap}->{authorizedService}})) {
    % next if app->{cfg}->{ldap}->{authorizedService}->{$s}->{disabled} == 1;
    % $f->{$_}++ foreach (@{app->{cfg}->{ldap}->{authorizedService}->{$s}->{data_fields}});
  % }
  % foreach my $fld (sort(keys(%$f))) {
    % my $fld_label = $fld =~ s/^umiOvpn(?:Cfg|Add)//r;
    % if ( $fld eq 'userPassword' ) {
      <div id="passwordDiv" class="row mb-3 d-none" title="" data-field="<%= $fld %>">
	<!-- <div class="input-group mb-3 d-none" data-field="<%# = $fld %>"> -->
	%= label_for password1 => 'password', class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  <div class="row mx-0">
	    %= password_field 'password1', class => 'col form-control', id => 'password1', placeholder => 'type a password'
	    %= password_field 'password2', class => 'col form-control', id => 'password2', placeholder => 'confirm the password'
	  </div>
	</div>
      </div>
    % }
    % elsif ( $fld eq 'associatedDomain' )
    % {
      % my $options = [ ['--- choose 1 from ' . scalar @$domains . ' domains ---' => ''], map { [ $_ => $_ ] } @$domains ];
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= select_field $fld => $options, id => $fld, class => 'custom-select form-select select2'
	</div>
      </div>
    % }
    % elsif ( $fld eq 'radiusGroupName' )
    % {
      % my $options = [ ['--- choose RADIUS group ---' => ''], map { [ $rad_groups->{$_} => $_ ] } keys(%$rad_groups) ];
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= select_field $fld => $options, id => $fld, class => 'custom-select form-control'
	</div>
      </div>
    % }
    % elsif ( $fld eq 'radiusProfileDn' )
    % {
      % my $options = [ ['--- choose RADIUS profile ---' => ''], map { [ $rad_profiles->{$_} => $_ ] } keys(%$rad_profiles) ];
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= select_field $fld => $options, id => $fld, class => 'custom-select form-control'
	</div>
      </div>
    % }
    % elsif ( $fld eq 'umiOvpnAddStatus' )
    % {
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	<span class="col-sm-3 fw-bold text-end text-uppercase" title="<%= $schema->{$fld}->{desc} %>"><%= $fld_label %>:</span>
	<div class="col-sm-9">
	  <select name="umiOvpnAddStatus" class="form-control custom-select" id="umiOvpnAddStatus" title="<%= app->{cfg}->{ui}->{form_fields}->{$fld}->{title} %>">
	    % foreach (sort(keys(%{constant('UMIOVPNADDSTATUS')}))) {
	      <option value="<%= constant('UMIOVPNADDSTATUS')->{$_} %>"<%= ' selected' if $_ eq 'enabled' %>><%= $_ %></option>
	    % }
	  </select>
	</div>
      </div>
    % }
    % elsif ( $fld eq 'umiOvpnAddDevType' || $fld eq 'umiOvpnAddDevOS' )
    % {
      % my $options = [ ['--- choose ' . $fld . ' type ---' => ''], map { [ $_ => $_ ] } @{constant(uc $fld)} ];
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld_label, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= select_field $fld => $options, id => $fld, class => 'custom-select form-control'
	</div>
      </div>
    % }
    % elsif ( exists app->{cfg}->{ui}->{form_fields}->{$fld}->{type} && app->{cfg}->{ui}->{form_fields}->{$fld}->{type} eq 'textarea' )
    % {
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld_label, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= text_area $fld, id => $fld, rows => 3, class => 'text-monospace form-control', placeholder => app->{cfg}->{ui}->{form_fields}->{$fld}->{ph}
	</div>
      </div>
    % } elsif ( exists app->{cfg}->{ui}->{form_fields}->{$fld}->{type} && app->{cfg}->{ui}->{form_fields}->{$fld}->{type} eq 'file' )
    % {
      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld_label, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= file_field $fld, id => $fld, class => 'form-control form-control'
	</div>
      </div>
    % } else {
      % my $ph = exists app->{cfg}->{ui}->{form_fields}->{$fld}->{ph} && app->{cfg}->{ui}->{form_fields}->{$fld}->{ph} ne '' ?
      %            app->{cfg}->{ui}->{form_fields}->{$fld}->{ph} :
      %            exists app->{cfg}->{ldap}->{defaults}->{attr}->{$fld}->{val} ?
      %              app->{cfg}->{ldap}->{defaults}->{attr}->{$fld}->{val} :
      %              '';

      %# $ph .= lc sprintf('%s.%s', $root->get_value('givenName'), $root->get_value('sn')) if $fld eq 'homeDirectory' || $fld eq 'login';
      % $ph .= $root->get_value('uid') if $fld eq 'homeDirectory' || $fld eq 'login';

      <div id="<%= $fld %>Div" class="row my-3 d-none" title="" data-field="<%= $fld %>">
	%= label_for $fld => $fld_label, class => 'col-sm-3 fw-bold text-end text-uppercase', title => $schema->{$fld}->{desc}
	<div class="col-sm-9">
	  %= text_field $fld, class => 'form-control', id => $fld, placeholder => $ph
	</div>
      </div>
    % }
  % }

  %= submit_button 'Submit', class => 'btn btn-success fw-bold text-uppercase my-3'
% end

%# == h_element_cp_download_btns( 'ldif', $ldif_export_params->{dn} . '.ldif' );
<pre id="ldif" class="user-select-all text-break umi-text-xs font-monospace">
  <%# = dumper $domains =%>
</pre>

<pre class="mt-5 umi-text-tiny text-muted"><%= dumper stash->{'mojo.validation'}->{error} if %{stash->{'mojo.validation'}->{error}} %></pre>

% if ( stash->{'mojo.validation'}->{error} ) {
  <script>
   % while (my ($k, $v) = each %{stash->{'mojo.validation'}->{error}}) {
     $('#<%= $k %>').addClass('is-invalid').after('<div id="<%= $k %>ValidationFeedback" class="invalid-feedback"></div>');
     % if (scalar(@$v) == 1) {
     $('#<%= $k %>ValidationFeedback').text('<%= $v->[0] %>');
     % } else {
     $('#<%= $k %>ValidationFeedback').text('is not <%= $v->[0] %>: <%= $v->[2] %>');
     % }
   % }
  </script>
% }

<script>

 document.addEventListener('DOMContentLoaded', () => {
   const authorizedService = document.getElementById('authorizedService');
   const fieldMap = {
     % my $svc = app->{cfg}->{ldap}->{authorizedService};
     % foreach my $s ( sort(keys( %$svc ))) {
       % if ( exists $svc->{$s}->{data_fields} ) {
     '<%= $s %>': [ '<%== join("','", @{$svc->{$s}->{data_fields}}) %>' ],
       % }
     % }
   };
   const iconMap = {
     % $svc = app->{cfg}->{ldap}->{authorizedService};
     % foreach my $s ( sort(keys( %$svc ))) {
       % if ( exists $svc->{$s}->{icon} ) {
	 % my $c = $svc->{$s}->{icon};
     '<%= $s %>': ['<%== '' . $c =~ s/ /', '/r %>'],
       % }
     % }
   };

   authorizedService.addEventListener('change', function () {
     const selectedService = this.value;
     const fieldsToShow = fieldMap[selectedService] || [];

     // Hide all fields initially
     document.querySelectorAll('#dynamicForm [data-field]').forEach(field => {
       field.classList.add('d-none');
       field.querySelector('input, select, textarea').disabled = true;
     });

     // Show relevant fields for the selected service
     const formGroupContainer = document.getElementById('dynamicForm');
     fieldsToShow.forEach(fieldName => {
       const field = document.querySelector(`#dynamicForm [data-field="${fieldName}"]`);
       if (field) {
	 field.classList.remove('d-none');
	 field.querySelector('input, select, textarea').disabled = false;
	 // Ensure the field is moved to the correct position
	 formGroupContainer.appendChild(field);
       }
     });

     // Change the icon at the top of the page according to the selected service
     const iconNode = document.querySelector('#title-icon');
     if (!iconNode) {
       return;
     }
     Array.from(iconNode.classList).forEach((cls) => {
       if (cls.startsWith('fa-')) {
	 iconNode.classList.remove(cls)
       }
     })

     if (selectedService && iconMap[selectedService]) {
       iconMap[selectedService].forEach(cls => {
	 iconNode.classList.add(cls);
       })
     } else {
       iconNode.classList.add('fa-solid');
       iconNode.classList.add('fa-file-circle-plus');
     }

   });

   authorizedService.dispatchEvent(new Event('change', { bubbles: true }));

 });

 $(document).ready(function() {

   $('.select2').select2({
     tags: true,
     tokenSeparators: [',', ' '],
     placeholder: "Select or add options",
     allowClear: true
   });

 });

</script>
