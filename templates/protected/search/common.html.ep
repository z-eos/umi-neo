%# -*- mode: web; eval: (follow-mode) -*-
% use Encode qw(decode_utf8);
% my $i = 0;
% my $j = 0;
% my $attr_val_class = "";

<div class="row w-100 py-5">
  <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
    <h3 class="fw-bold">
      <i class="fa-solid fa-search fa-lg text-muted me-2"></i>
      Search Results
    </h3>
  </div>
  <div class="col-xs-6 col-sm-6 col-md-8 col-lg-8">
    <dl class="row font-monospace text-muted umi-text-xs">
      <dt class="col-1">base:</dt>  <dd class="col-11 text-break"><%= $search_arg->{base}   %></dd>
      <dt class="col-1">filter:</dt><dd class="col-11 text-break"><%= $search_arg->{filter} %></dd>
    </dl>
  </div>
</div>

%# vh-100 is important, without it dropwown are not shown for collapsed rows
<div class="container-fluid vh-100">
  % my ($col, $cn, $ct, $mn, $mt);
  % my $mps = '';
  % my $acclog = app->{cfg}->{ldap}->{accesslog};
  % my $re = qr/^.*$acclog$/;
  %# !!! TOFIX on bold request to `/search/common` $entries is empty and we need err handle that
  % for my $e (@{$entries}) {

    % if ( $e_info->{$e->dn}->{disabled} ) {
      % $col = 'danger';
    % } else {
      % $col = h_dn_color($e);
      % if ( $col eq 'warning' ) {  $mps = ' ms-3'; }
      % elsif ($col eq 'success') { $mps = ' ms-4 ps-1'; }
      % else { $mps = ''; }
    % }
    % $col .= '-subtle';
    
    % my @dn_ico = ($e->dn =~ /authorizedService=([^,]+)\@/g);

    %## extracting users root object dn
    %# delete if h_get_root_dn works well # my $root_usr_dn = '';
    %# delete if h_get_root_dn works well # my @rusr_dn = split(/uid=/, $e->dn);
    %# delete if h_get_root_dn works well # $root_usr_dn = 'uid=' . $rusr_dn[-1] if @rusr_dn > 1;
    % my $root_usr_dn = h_get_root_dn $e->dn;
    % $root_usr_dn = '' if ! defined $root_usr_dn;
    
    <div class="card border border-<%= $col %> my-1" id="card-<%= $i %>">

	<div class="card-header bg-<%= $col %> p-0 m-0 fs-6">
	<div class="btn-group z-10" role="group">
	  %# COLLAPSE CARET
	  <button class="btn<%= ' collapsed' if scalar @$entries > 1 %>" type="button"
		  data-bs-toggle="collapse" data-bs-target="#collapse-<%= $i %>"
		  aria-expanded="<%= scalar @$entries > 1 ? 'false' : 'true' %>" aria-controls="collapse-<%= $i %>">
	    <i class="fa-solid fa-caret-right"></i>
	  </button>
	  %# BURGER MENU
	  % if ( $e->dn !~ /$re/ ) {
	    % my $rrdn = '';
	    % $rrdn = $1 if $e->dn =~ /^uid=([^,]+),ou=People,dc=/i;
	    %= include 'protected/search/common-menu', e => $e, i => $i, rrdn => $rrdn
	  % }
	  
	  %# ICO after BURGER MENU
	  %= form_for '/search/common' => (class => "injectable-form", method => 'POST') => begin
	  %= hidden_field 'ldap_subtree' => $root_usr_dn ne '' ? $root_usr_dn : $e->dn
	  <button type="submit" class="btn"
		  % if ($root_usr_dn ne '') {
		  title="Click to get whole root object subtree">
	    <i class="fa-solid fa-user-tag"></i>
		  % } elsif ($e->dn =~ /^.*,cn=accesslog$/)
		  % {
		    >
		    <i class="fa-solid fa-history"></i>
		  % } else {
		    >
		    <i class="fa-solid fa-shapes"></i>
		  % }
	  </button>
	  % end

	  %# REWRITTEN DN with ICO
	  %= form_for '/search/common' => (class => "injectable-form", method => 'POST') => begin
	  %= hidden_field 'ldap_subtree' => $e->dn
	    <button type="submit" class="btn px-0" title="Click to get branch object subtree">
	      % if ( scalar @dn_ico ) {
		<%# == '<i class="' . app->{cfg}->{ui}->{ico}->{usvc}->{$dn_ico[0]} . $mps . ' me-2"></i>' %>
		<%== '<i class="' . app->{cfg}->{ldap}->{authorizedService}->{$dn_ico[0]}->{icon} . $mps . ' me-2"></i>' %>
	      % } elsif ( $e->exists('reqType') )
	      % {
		% my $reqType = $e->get_value('reqType');
		% if ( $reqType eq 'add' )
		% {
		  <i class="fa-solid fa-circle-plus fa-xs me-2 text-success"></i>
		% } elsif ( $reqType eq 'modify' )
		% {
		  <i class="fa-solid fa-gear fa-xs me-2 text-warning"></i>
		% } elsif ( $reqType eq 'delete' )
		% {
		  <i class="fa-solid fa-circle-xmark fa-xs me-2 text-danger"></i>
		% }
	      % } else {
	      % }
	      <%= h_rewrite_dn($e->dn) %>
	    </button>
	  % end
	</div>
	% if ( ! $e->exists('reqType') ) {
	  % $ct = substr($e->get_value('createTimestamp'), 0, -1);
	  % $cn = substr($e->get_value('creatorsName'), 4, index($e->get_value('creatorsName'), ",")-4) if !$e->exists('reqType');
	  % $mt = substr($e->get_value('modifyTimestamp'), 0, -1);
	  % $mn = substr($e->get_value('modifiersName'), 4, index($e->get_value('modifiersName'), ",")-4) if !$e->exists('reqType');
	  <ul class="list-unstyled fa-ul umi-text-tiny font-monospace float-end m-0 pe-2 pt-1">
	    <li title="created GMT: <%= $ct %> by <%= $cn %>">
	      <span class="fa-li"><i class="fa-solid fa-hourglass-start"></i></span><%= $ct %> <b><%= $cn %></b>
	    </li>
	    <li title="modified, GMT: <%= $mt %> by <%= $mn %>">
	      <span class="fa-li"><i class="fa-solid fa-hourglass-half"></i></span><%= $mt %> <b><%= $mn %></b>
	    </li>
	  </ul>
	% }
	
      </div>

      <div class="collapse<%= ' show' if scalar @$entries == 1 %>" id="collapse-<%= $i %>">
	<div class="card card-body">

	  <div class="row">
	    <div class="col-3 text-end fw-bold fs-6">dn</div>
	    <div class="col-9 user-select-all"><%= $e->dn %></div>
	  </div>

	  % my @attr_break = qw(pgpKey certificateRevocationList;binary umiUserBackup);
	  % my @attr_wrap = qw(grayPublicKey sshPublicKey reqMod);
	  % for my $attr (sort( $e->attributes )) {
	    % next if $attr eq 'createTimestamp' || $attr eq 'creatorsName' || $attr eq 'modifyTimestamp' || $attr eq 'modifiersName';

	    <div class="row">
	      <div class="col-3 text-end fw-bold fs-6"><%= $attr %></div>
	      <div class="col-9 user-select-all">

		% for my $attr_val (@{$e->get_value($attr, asref => 1)}) {
		    % if ($attr eq "jpegPhoto") {
		      <div class="col-12 font-monospace">
			<img src="data:image/jpg;base64,<%= Mojo::Util::b64_encode $attr_val %>"
			     class="img-thumbnail" alt="<%= $e->dn %>">
		      </div>
		    % } elsif ( $attr eq 'gidNumber' )
		    % {
		      <a href="/search/common?search_filter=gidNumber=<%= $attr_val %>&search_base_case=ou=group,dc=nxc,dc=no"
			 class="btn btn-link btn-sm px-0<%= ' text-danger fw-bold' if $attr_val eq app->{cfg}->{ldap}->{defaults}->{group_blocked_gidnumber} %>">
			<%= $attr_val %><%= $attr_val eq app->{cfg}->{ldap}->{defaults}->{group_blocked_gidnumber} ? ' / ' . app->{cfg}->{ldap}->{defaults}->{group_blocked_cn} : '' %>
		      </a>
		    % } elsif ( $attr eq 'userPassword' )
		    % {
		      <%== '<i class="fa-solid fa-asterisk text-muted"></i>' x 6 %>
		    % } elsif ( $attr eq 'reqMod' )
		    % {
		      <div class="user-select-all font-monospace umi-text-tiny mb-1"><%= $attr_val %></div>
		    % } elsif ( grep {$attr eq $_} (@attr_break, @attr_wrap))
		    % {
		      % my $text_pre;
		      % if ( grep {$attr eq $_} @attr_break ) {
			% $text_pre = ' text-break';
		      % } else {
			% $text_pre = ' text-wrap';
		      % }
		      %== h_element_cp_download_btns( $attr, $attr . '.txt' );
		      % my $attr_val_processed = $attr_val;
		      % if ( $attr eq 'umiUserBackup' ) {
			% use IO::Uncompress::Gunzip qw(gunzip $GunzipError) ;
			% use Mojo::Util;
			% my $decoded = Mojo::Util::b64_decode( $attr_val );
			% gunzip \$decoded => \$attr_val_processed;
		      % }
		      <pre class="user-select-all<%= $text_pre %> umi-text-tiny" id="<%= $attr %>""><%= $attr_val_processed %></pre>
		    % } elsif ($attr eq 'userCertificate;binary' || $attr eq 'cACertificate;binary')
		    % {
		      % my $ci = $self->h_cert_info({ cert => $attr_val, ts => "%Y%m%d%H%M%S", });
		      <div class="col-12 font-monospace">
			<small class="float-left">
			  %# <pre><%= dumper $ci %></pre>
			  <dl class="row">
			    % foreach my $k (sort keys %$ci) {
			      % next if $k eq 'cert';
			      % next if $k eq 'error';
			      <dt class="col-2 text-end py-0 my-0"><%= $k %></dt>
			      <dd class="col-10 text-monospace text-start py-0 my-0"><%= $ci->{$k} %></dd>
			    % }
			  </dl>
			</small>
		      </div>
		    % } else {
		      <div class="col-12 font-monospace pb-1"><%= utf8::is_utf8($attr_val) ? $attr_val : decode_utf8($attr_val) %></div>
		    % }
		    % $j++
		  % }

	      </div>
	    </div>

	  % }

	</div>
      </div>

    </div>
    %= include 'protected/search/common-modals', dn => $e->dn, i => $i

    % $i++;
    % $mps = '';
  % }
</div>
