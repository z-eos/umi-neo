%# -*- mode: web; eval: (follow-mode) -*-

<h1 class="mt-3 mb-4">
  Employees ages
</h1>

% my $data = stash->{chart};
% if ( @$data ) {

  <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script>

  <div id="ageChart" style="width: 100%; max-width: 1024px; height: 768px;" class="m-0 p-0"></div>

  <script>

   /*
    * https://echarts.apache.org/en/option.html
    *                                           */

   const ages = [ <%== join ', ', @$data %> ];
   // Define bins and labels
   const binLabels = [
     '15–19', '20–24', '25–29', '30–34',
     '35–39', '40–44', '45–49', '50–54',
     '55–59', '60–64', '65–69', '70+'
   ];
   const bins = Array(binLabels.length).fill(0);

   // Fill bins
   ages.forEach(age => {
     let index = Math.floor((age - 15) / 5);
     if (index < 0) index = 0;
     if (index >= bins.length) index = bins.length - 1;
     bins[index]++;
   });

   const total = ages.length;
   const min = Math.min(...bins);
   const max = Math.max(...bins);

   // Bootstrap contextual classes in gradient order
   const bsClasses = ['danger', 'warning', 'info', 'primary', 'success'];

   // Map value to bootstrap class by percentile
   function getBootstrapColor(value) {
     const percent = (value - min) / (max - min || 1); // avoid 0-div
     const step = Math.floor(percent * (bsClasses.length - 1));
     const varName = `--bs-${bsClasses[step]}`;
     return getComputedStyle(document.body).getPropertyValue(varName).trim() || '#999';
   }

   const seriesData = bins.map((count, idx) => ({
     value: count,
     name: binLabels[idx],
     itemStyle: {
       color: getBootstrapColor(count)
     }
   }));

   const chart = echarts.init(document.getElementById('ageChart'));
   chart.setOption({
     tooltip: {
       trigger: 'item',
       formatter: '{b}: {c} ({d}%)'
     },
     xAxis: {
       type: 'category',
       data: binLabels,
       axisLabel: {
	 color: getComputedStyle(document.body).getPropertyValue('--bs-body-color') || '#212529'
       }
     },
     yAxis: {
       type: 'value',
       name: 'Employees',
       axisLabel: {
	 color: getComputedStyle(document.body).getPropertyValue('--bs-body-color') || '#212529'
       }
     },
     grid: {
       left: '40px',
       right: '20px',
       top: '30px',
       bottom: '50px',
       containLabel: true
     },
     series: [{
       type: 'bar',
       data: seriesData,
       barWidth: '60%'
     }]
   });

  </script>

% }
